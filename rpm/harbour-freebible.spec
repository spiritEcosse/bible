# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.27
# 

Name:       harbour-freebible

# >> macros
# << macros

Summary:    Application bible for learning and daily reading for everyone.
Version:    1.0.0
Release:    1
Group:      Qt/Qt
License:    LICENSE
URL:        https://github.com/spiritEcosse/bible
Source0:    %{name}-%{version}.tar.bz2
Source100:  harbour-freebible.yaml
Requires:   sailfishsilica-qt5 >= 0.10.9
Requires:   perl-CPAN
Requires:   perl-IPC-Cmd
Requires:   perl-IO-Compress
Requires:   sqlite
Requires:   qt5-qttest
Requires:   sdk-deploy-rpm
BuildRequires:  pkgconfig(sailfishapp) >= 1.0.2
BuildRequires:  pkgconfig(Qt5Core)
BuildRequires:  pkgconfig(Qt5Qml)
BuildRequires:  pkgconfig(Qt5Quick)
BuildRequires:  pkgconfig(Qt5Test)
BuildRequires:  pkgconfig(sqlite3)
BuildRequires:  cmake >= 3.5
BuildRequires:  git
BuildRequires:  qt5-qttest
BuildRequires:  sqlite-devel
BuildRequires:  desktop-file-utils
BuildRequires:  perl-IO-Compress
BuildRequires:  perl-Module-Load-Conditional

%description
Short description of my Sailfish OS Application


%prep
%setup -q -n %{name}-%{version}

# >> setup
# << setup

%build
# >> build pre
export CMAKE_BUILD_TYPE=$(if [[ -z ${CMAKE_BUILD_TYPE+x} ]]; then echo "Debug"; else echo ${CMAKE_BUILD_TYPE}; fi;)
cmake -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTING=OFF -DCODE_COVERAGE=OFF
make
# << build pre

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
DESTDIR=%{buildroot} make install
mkdir -p %{_bindir}
# << install pre
# >> install post
# << install post

desktop-file-install --delete-original       \
  --dir %{buildroot}%{_datadir}/applications             \
   %{buildroot}%{_datadir}/applications/*.desktop

%files
%defattr(-,root,root,-)
%{_libdir}/cmake/QuaZip-Qt5-1.3/QuaZip-Qt5Config.cmake
%{_libdir}/cmake/QuaZip-Qt5-1.3/QuaZip-Qt5ConfigVersion.cmake
%{_libdir}/cmake/QuaZip-Qt5-1.3/QuaZip-Qt5_SharedTargets*
%{_libdir}/cmake/SqliteOrm/SqliteOrmConfig.cmake
%{_libdir}/cmake/SqliteOrm/SqliteOrmConfigVersion.cmake
%{_libdir}/cmake/SqliteOrm/SqliteOrmTargets.cmake
%{_libdir}/libquazip1-qt5*
%{_libdir}/pkgconfig/quazip1-qt5.pc
/usr/include/sqlite_orm/sqlite_orm.h
/usr/include/QuaZip-Qt5-1.3/quazip/JlCompress.h
/usr/include/QuaZip-Qt5-1.3/quazip/ioapi.h
/usr/include/QuaZip-Qt5-1.3/quazip/minizip_crypt.h
/usr/include/QuaZip-Qt5-1.3/quazip/quaadler32.h
/usr/include/QuaZip-Qt5-1.3/quazip/quachecksum32.h
/usr/include/QuaZip-Qt5-1.3/quazip/quacrc32.h
/usr/include/QuaZip-Qt5-1.3/quazip/quagzipfile.h
/usr/include/QuaZip-Qt5-1.3/quazip/quaziodevice.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazip.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazip_global.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazip_qt_compat.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazipdir.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazipfile.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazipfileinfo.h
/usr/include/QuaZip-Qt5-1.3/quazip/quazipnewinfo.h
/usr/include/QuaZip-Qt5-1.3/quazip/unzip.h
/usr/include/QuaZip-Qt5-1.3/quazip/zip.h
%{_bindir}
%{_datadir}/%{name}
%{_datadir}/%{name}/translations/
%{_datadir}/applications/%{name}.desktop
%{_datadir}/icons/hicolor/*/apps/%{name}.png
# >> files
# << files
