name: Release

on:
  workflow_run:
    workflows: ["Build status and tests"]
    types:
      - completed
  push:
    branches:
      - master

env:
  RELEASE: 4.4.0.64
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, armv7hl]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - run: echo ARCH ${{ matrix.arch }}
      - uses: actions/checkout@v3

      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#release'
          message: Starting release for arch "${{ matrix.arch }}"
        if: always()

      - name: Prepare
        run: mkdir output

      - name: Release for arch "${{ matrix.arch }}"
        run: >
          docker run --rm --privileged
          -e IDENTITY_FILE="${{ secrets.IDENTITY_FILE }}"
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          -e AWS_REGION="${{ secrets.AWS_REGION }}"
          -e ARCH="${{ matrix.arch }}"
          -v $PWD:/share ghcr.io/spiritecosse/bible-sailfishos-${{ matrix.arch }}:$RELEASE /bin/bash -c "
          curl https://raw.githubusercontent.com/spiritEcosse/aws-sailfish-sdk/master/install.sh | bash -s -- --func=release
          "

      - name: Upload build result
        uses: actions/upload-artifact@v2
        with:
          name: output-rpms
          path: output

      - name: Create release
        if: contains(github.ref, 'release')
        run: |
          set -x
          assets=()
          for asset in output/*.rpm; do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"

      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          message: Finished for arch "${{ matrix.arch }}"
          channel: '#release'
        if: always()
