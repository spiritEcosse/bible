name: Code coverage Sailfish OS

on: [push, pull_request]

env:
  RELEASE: 4.4.0.64
  SAILFISH_IMAGE: coderus/sailfishos-platform-sdk:$RELEASE

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Prepare
      run: mkdir -p ~/3rdparty

    - name: Set up a cache for 3rdparty
      uses: actions/cache@v3
      with: 
        path: /home/runner/3rdparty
        key: sailfish-armv7hl-3rdparty-${{ hashFiles('*.cmake') }}
        restore-keys: sailfish-armv7hl-3rdparty-

    - name: mv 3rdparty 3rdparty_original
      run: mv 3rdparty 3rdparty_original

    - name: cp -fr ~/3rdparty .
      run: cp -fr ~/3rdparty .

    - name: cp -fr 3rdparty_original/* 3rdparty/
      run: cp -fr 3rdparty_original/* 3rdparty/

    - name: ls -la 3rdparty
      run: ls -la 3rdparty

    - name: Tests
      run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk-armv7hl:$RELEASE /bin/bash -c "
            alias mb2='mb2 --target SailfishOS-$RELEASE-armv7hl' &&
            sudo zypper install -y perl-CPAN perl-IPC-Cmd &&
            cd /home/mersdk &&
            mkdir -p build &&
            cd build &&
            echo 'run cp -fr /share/* .' &&
            cp -fr /share/* . &&
            cp -fr /share/.git* . &&
            ls -la . &&
            mb2 build ;
            echo 'run sudo rsync -ar --stats --delete 3rdparty/ /share/3rdparty' &&
            sudo rsync -ar --stats --delete 3rdparty/ /share/3rdparty ;
            mb2 build-shell ctest --output-on-failure ;
            echo 'Create lcov report, capture coverage info' &&
            mb2 build-shell /home/mersdk/build/3rdparty/lcov/bin/lcov --directory . --capture --output-file coverage.info &&
            echo 'Filter out system and extra files. To also not include test code in coverage add them with full path to the patterns */tests/*' &&
            mb2 build-shell lcov --remove coverage.info '*/usr/*' '/.cache/*' '*/3rdparty/*' '*/tests/*' '*/lib/*' '*_autogen/*' --output-file coverage.info &&
            echo 'Output coverage data for debugging (optional)' &&
            mb2 build-shell lcov --list coverage.info &&
            curl -Os https://uploader.codecov.io/latest/linux/codecov &&
            chmod +x codecov &&
            ./codecov -t ${CODECOV_TOKEN} -X gcov
            "

    - name:  3rdparty /home/runner/3rdparty
      run: rsync -ar --stats --delete 3rdparty/ /home/runner/3rdparty
