name: Code coverage Sailfish OS

on: [push, pull_request]

env:
  RELEASE: 4.4.0.64
  SAILFISH_IMAGE: coderus/sailfishos-platform-sdk:$RELEASE

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Prepare
      run: mkdir -p ~/3rdparty

    - name: Set up a cache for 3rdparty
      uses: actions/cache@v3
      with: 
        path: /home/runner/3rdparty
        key: sailfish-armv7hl-3rdparty-${{ hashFiles('*.cmake') }}
        restore-keys: sailfish-armv7hl-3rdparty-

    - name: mv 3rdparty 3rdparty_original
      run: mv 3rdparty 3rdparty_original

    - name: cp -fr ~/3rdparty .
      run: cp -fr ~/3rdparty .

    - name: cp -fr 3rdparty_original/* 3rdparty/
      run: cp -fr 3rdparty_original/* 3rdparty/

    - name: ls -la 3rdparty
      run: ls -la 3rdparty

    - name: Tests
      run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk-armv7hl:$RELEASE /bin/bash -c "
            which cmake ;
            which ctest ;
            zypper install -y cmake &&
            which cmake ;
            which ctest
            "

    - name: ls -la ~/3rdparty
      run: ls -la ~/3rdparty

    - name: ls -la 3rdparty
      run: ls -la 3rdparty

    - name:  3rdparty /home/runner/3rdparty
      run: rsync -ar --stats --delete 3rdparty/ /home/runner/3rdparty

    # - name: Make lcov
      # working-directory: /share/output
      # run: |
        # # Create lcov report
        # # capture coverage info
        # - lcov --directory . --capture --output-file coverage.info
        # # filter out system and extra files.
        # # To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
        # - lcov --remove coverage.info '*/usr/*' "${HOME}" '/.cache/*' '*/3rdparty/*' '*/tests/*' '*/lib/*' "*_autogen/*" --output-file coverage.info
        # # output coverage data for debugging (optional)
        # - lcov --list coverage.info

    # - name: Upload coverage reports to Codecov
      # working-directory: /share/output
      # run: |
        # # Replace `linux` below with the appropriate OS
        # # Options are `alpine`, `linux`, `macos`, `windows`
        # curl -Os https://uploader.codecov.io/latest/linux/codecov
        # chmod +x codecov
        # ./codecov -t ${CODECOV_TOKEN} -X gcov
