name: Code coverage Sailfish OS

on: [push]

env:
  RELEASE: 4.4.0.64
  SAILFISH_IMAGE: coderus/sailfishos-platform-sdk:$RELEASE

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
    - uses: actions/checkout@v3

    - uses: act10ns/slack@v1
      with:
        status: starting
        channel: '#sailfish-os-code-coverage'
        message: Starting Build and Tests and Push code coverage
      if: always()
        
    - name: Build and Tests and Push code coverage
      run: >
        docker run --rm --privileged
        -e CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}"
        -e IDENTITY_FILE="${{ secrets.IDENTITY_FILE }}"
        -e BACKUP_HOST="${{ secrets.BACKUP_HOST }}"
        -e BACKUP_USER="${{ secrets.BACKUP_USER }}"
        -v $PWD:/share coderus/sailfishos-platform-sdk-armv7hl:$RELEASE /bin/bash -c "
            alias mb2='mb2 --target SailfishOS-$RELEASE-armv7hl' &&
            export FILE=armv7hl.tar.gz &&
            export ID_FILE=/tmp/id &&
            cd /home/mersdk &&
            mkdir -p build &&
            cd build &&
            cp -fr /share/scripts/ . &&
            cp -fr /share/rpm/ . &&
            mb2 build-init &&
            mb2 build-requires &&
            echo '================================ Wake up server ===================================' &&
            scripts/aws.sh &&
            echo '================================ Download backup ===================================' &&
            cd ../ &&
            build/scripts/backup/download.sh &&
            cd build &&
            echo '================================ rsync -ar --stats --exclude '3rdparty' --exclude '.git/modules' /share/ . =============================' &&
            ls -la . &&
            sudo rsync -rv --checksum --ignore-times --info=progress2 --stats --human-readable --exclude '.git/modules' /share/ . &&
            sudo chown -R mersdk:mersdk . &&
            ls -la . &&
            mb2 build ;
            echo '================================ Upload backup =========================================' &&
            cd ../ &&
            build/scripts/backup/upload.sh ;
            cd build &&
            echo '================================ Run tests  =========================================' &&
            mb2 build-shell ctest --output-on-failure &&
            mkdir ccov &&
            echo '================================ make ccov-all-capture =================================' &&
            mb2 build-shell make ccov-all-capture &&
            echo '================================ Push results to codecov.io  ================================' &&
            curl -Os https://uploader.codecov.io/latest/linux/codecov &&
            chmod +x codecov &&
            ./codecov -t ${CODECOV_TOKEN} -f ccov/all-merged.info
            "

    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
           status: ${{ job.status }}
           steps: ${{ toJson(steps) }}
           channel: '#sailfish-os-code-coverage'
      if: always()
